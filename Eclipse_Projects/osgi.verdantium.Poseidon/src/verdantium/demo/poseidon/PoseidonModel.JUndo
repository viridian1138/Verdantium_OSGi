

package verdantium.demo.poseidon;


import jundo.util.array.JobjArray;


/*$$strtCprt*/
/*
     Poseidon ripple-tank simulator by Thorn Green
	Copyright (C) 2005 Thorn Green

	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
/*$$endCprt*/


class PoseidonModel
{
	protected int img_size;
	protected JobjArray waves;
	protected jobj endColor;
	protected jobj midColor;
	protected jobj startColor;

    public int getResolution( )
    	{ img_size };
    	
    public milieu setResolution( int in )
    	{ img_size := in };
    	
    public JobjArray getWaves( )
    	{ waves };
    	
    public milieu setWaves( JobjArray in )
    	{ waves := in };
    	
    public jobj getEndColor( )
    	{ endColor };
    	
    public milieu setEndColor( jobj in )
    	{ endColor := in };
    	
    public jobj getMidColor( )
    	{ midColor };
    	
    public milieu setMidColor( jobj in )
    	{ midColor := in };
    	
    public jobj getStartColor( )
    	{ startColor };
    	
    public milieu setStartColor( jobj in )
    	{ startColor := in };
		
	public static pair[ PoseidonModel ] new_PoseidonModel( 
    	int _img_size ,
	    JobjArray _waves,
	    jobj _endColor ,
	    jobj _midColor ,
	    jobj _startColor )
	{
		seq now into
		{
			pair[ PoseidonModel ] gpair = PoseidonModel.allocate_PoseidonModel();
			PoseidonModel model = gpair.cobj;
			model.setResolution( _img_size );
			model.setWaves( _waves );
			model.setEndColor( _endColor );
			model.setMidColor( _midColor );
			model.setStartColor( _startColor );
		}
		with [ model , now ] fi
	};
	
}

