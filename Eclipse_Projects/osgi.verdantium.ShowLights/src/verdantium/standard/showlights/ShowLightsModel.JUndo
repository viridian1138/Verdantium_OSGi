

package verdantium.standard.showlights;

/*$$strtCprt*/
/*
    ShowLights animated marquee by Thorn Green
	Copyright (C) 2005 Thorn Green

	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
/*$$endCprt*/

class ShowLightsModel
{
	protected boolean onlyDesignerEdits;
	protected int swatchSize;
	protected int swatchInset;
	protected int tbl_delay;
	protected int num_frames;
	protected jobj endColor;
	protected jobj startColor;
	
	public boolean isOnlyDesignerEdits()
		{ onlyDesignerEdits };
		
	public milieu setOnlyDesignerEdits( boolean in )
		{ onlyDesignerEdits := in };

    public int getResolution( )
    	{ swatchSize };
    	
    public milieu setResolution( int in )
    	{ swatchSize := in };
    	
    public int getInset( )
    	{ swatchInset };
    	
    public milieu setInset( int in )
    	{ swatchInset := in };
    	
    public int getDelay( )
    	{ tbl_delay };
    	
    public milieu setDelay( int in )
    	{ tbl_delay := in };
    	
    public int getNumFrames( )
    	{ num_frames };
    	
    public milieu setNumFrames( int in )
    	{ num_frames := in };
    	
    public jobj getEndColor( )
    	{ endColor };
    	
    public milieu setEndColor( jobj in )
    	{ endColor := in };
    	
    public jobj getStartColor( )
    	{ startColor };
    	
    public milieu setStartColor( jobj in )
    	{ startColor := in };
		
	public static pair[ ShowLightsModel ] new_ShowLightsModel( boolean _onlyDesignerEdits ,
    	int _swatchSize ,
	    int _swatchInset ,
	    int _tbl_delay ,
	    int _num_frames ,
	    jobj _endColor ,
	    jobj _startColor )
	{
		seq now into
		{
			pair[ ShowLightsModel ] gpair = ShowLightsModel.allocate_ShowLightsModel();
			ShowLightsModel model = gpair.cobj;
			model.setOnlyDesignerEdits( _onlyDesignerEdits );
			model.setResolution( _swatchSize );
			model.setInset( _swatchInset );
			model.setDelay( _tbl_delay );
			model.setNumFrames( _num_frames );
			model.setEndColor( _endColor );
			model.setStartColor( _startColor );
		}
		with [ model , now ] fi
	};
	
}

